})
}
shinyApp(ui, server)
watershed_data <- read_excel("Site Assessment Master with Meta data.xlsx", .name_repair = "universal") %>%
dplyr::select("Watershed", "Site", "Year_full_assess", "Leaf_Dec", "Tot_inv_abun", "FBI", "pH", "Temp",
"DO_per", "DO_ppm", "SPC", "TDS", "PO4", "NO3", "NH3", "BOD", "TSS", "Discharge", "Chloride",
"Imper_Catch", "Imper_5m", "Arsenic", "Mercury", "Lead", "Wetland", "Forest", "Grass", "Agricultural") %>%
#removing watersheds that contain mainly NA values
dplyr::filter(Watershed != "Duck",
Watershed != "Rock River")
relationship_testing <- watershed_data
relationship_testing <- relationship_testing[, -c(1, 2)]
relationship_testing <- na.omit(relationship_testing)
cor(relationship_testing)
phosphate_catchment <- watershed_data %>%
dplyr::select("Watershed", "PO4", "Imper_Catch") %>%
group_by(Watershed) %>%
mutate(Average_PO4 = mean(PO4),
Average_Imper_Catch = mean(Imper_Catch)) %>%
distinct(Watershed, Average_PO4, Average_Imper_Catch)
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
invertebrate_leaf_decomp <- watershed_data %>%
dplyr::select("Watershed", "Tot_inv_abun", "Leaf_Dec") %>%
na.omit() %>%
group_by(Watershed) %>%
mutate(Average_Tot_inv_abun = mean(Tot_inv_abun),
Average_Leaf_Dec = mean(Leaf_Dec)) %>%
distinct(Watershed, Average_Tot_inv_abun, Average_Leaf_Dec)
#0.371 correlation
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, fill = Average_Tot_inv_abun)) +
geom_col(show.legend = TRUE) +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
nitrate_catchment <- watershed_data %>%
dplyr::select("Watershed", "NO3", "Agricultural") %>%
group_by(Watershed) %>%
mutate(Average_NO3 = mean(NO3),
Average_Agricultural = mean(Agricultural)) %>%
distinct(Watershed, Average_NO3, Average_Agricultural)
#0.852 correlation
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
oxygen_fbi <- watershed_data %>%
dplyr::select("Watershed", "FBI", "DO_ppm") %>%
na.omit() %>%
group_by(Watershed) %>%
mutate(Average_DO_ppm = mean(DO_ppm),
Average_FBI = mean(FBI)) %>%
distinct(Watershed, Average_DO_ppm, Average_FBI)
#-0.752
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, fill = Average_DO_ppm)) +
geom_col(show.legend = TRUE) +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
forest_temp <- watershed_data %>%
dplyr::select("Watershed", "Temp", "Forest") %>%
group_by(Watershed) %>%
mutate(Average_Temp = mean(Temp),
Average_Forest = mean(Forest)) %>%
distinct(Watershed, Average_Temp, Average_Forest)
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
catchment_by_site <- watershed_data %>%
dplyr::select("Watershed", "Site", "Wetland", "Forest", "Grass", "Agricultural")
blackhawk_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Blackhawk")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
kickapoo_grass <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Grass") %>%
dplyr::filter(Watershed == "Kickapoo")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
kickapoo_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Kickapoo")
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ui<-fluidPage(
titlePanel(title = "Explore Consumer Complaints Dataset"),
h4('Complaints by Month per Product'),
#setting up data entry/selection areas for user
sidebarLayout(
sidebarPanel(
selectizeInput("watershed_choice", "Select Watershed(s)",
choices = c("Blackhawk", "Crow", "Kickapoo", "Rock Island", "Walnut"), multiple = TRUE, selected = "Blackhawk"),
selectInput("visualization_choice", "Select Visualization",
choices = c(1, 2, 3, 4, 5, 6, 7, 8)),
#used to display results for desired inputs
actionButton("Button", "Go")
),
mainPanel(
plotOutput("myPlot")
)
)
)
server <- function(input, output) {
# Render plot based on selected chart type
output$myPlot <- renderPlot({
if (input$visualization_choice == 1) {
# Render bar chart
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
} else if (input$visualization_choice == 2) {
# Render scatter plot
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, fill = Average_Tot_inv_abun)) +
geom_col(show.legend = TRUE) +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
} else if (input$visualization_choice == 3) {
# Render line chart
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
} else if (input$visualization_choice == 4) {
# Render line chart
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, fill = Average_DO_ppm)) +
geom_col(show.legend = TRUE) +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
} else if (input$visualization_choice == 5) {
# Render line chart
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 6) {
# Render line chart
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 7) {
# Render line chart
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 8) {
# Render line chart
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
}
})
observeEvent(input$watershed_choice, {
if (input$visualization_choice == 1) {
updatePlot <- ggplot(phosphate_catchment, aes(x = reorder(input$watershed_choice, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
}
output$myPlot <- renderPlot(updatePlot)
})
}
shinyApp(ui, server)
updatePlot <- ggplot(phosphate_catchment, aes(x = input$watershed_choice, Average_Imper_Catch, y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
watershed_data <- read_excel("Site Assessment Master with Meta data.xlsx", .name_repair = "universal") %>%
dplyr::select("Watershed", "Site", "Year_full_assess", "Leaf_Dec", "Tot_inv_abun", "FBI", "pH", "Temp",
"DO_per", "DO_ppm", "SPC", "TDS", "PO4", "NO3", "NH3", "BOD", "TSS", "Discharge", "Chloride",
"Imper_Catch", "Imper_5m", "Arsenic", "Mercury", "Lead", "Wetland", "Forest", "Grass", "Agricultural") %>%
#removing watersheds that contain mainly NA values
dplyr::filter(Watershed != "Duck",
Watershed != "Rock River")
relationship_testing <- watershed_data
relationship_testing <- relationship_testing[, -c(1, 2)]
relationship_testing <- na.omit(relationship_testing)
cor(relationship_testing)
phosphate_catchment <- watershed_data %>%
dplyr::select("Watershed", "PO4", "Imper_Catch") %>%
group_by(Watershed) %>%
mutate(Average_PO4 = mean(PO4),
Average_Imper_Catch = mean(Imper_Catch)) %>%
distinct(Watershed, Average_PO4, Average_Imper_Catch)
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
invertebrate_leaf_decomp <- watershed_data %>%
dplyr::select("Watershed", "Tot_inv_abun", "Leaf_Dec") %>%
na.omit() %>%
group_by(Watershed) %>%
mutate(Average_Tot_inv_abun = mean(Tot_inv_abun),
Average_Leaf_Dec = mean(Leaf_Dec)) %>%
distinct(Watershed, Average_Tot_inv_abun, Average_Leaf_Dec)
#0.371 correlation
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, fill = Average_Tot_inv_abun)) +
geom_col(show.legend = TRUE) +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
nitrate_catchment <- watershed_data %>%
dplyr::select("Watershed", "NO3", "Agricultural") %>%
group_by(Watershed) %>%
mutate(Average_NO3 = mean(NO3),
Average_Agricultural = mean(Agricultural)) %>%
distinct(Watershed, Average_NO3, Average_Agricultural)
#0.852 correlation
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
oxygen_fbi <- watershed_data %>%
dplyr::select("Watershed", "FBI", "DO_ppm") %>%
na.omit() %>%
group_by(Watershed) %>%
mutate(Average_DO_ppm = mean(DO_ppm),
Average_FBI = mean(FBI)) %>%
distinct(Watershed, Average_DO_ppm, Average_FBI)
#-0.752
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, fill = Average_DO_ppm)) +
geom_col(show.legend = TRUE) +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
forest_temp <- watershed_data %>%
dplyr::select("Watershed", "Temp", "Forest") %>%
group_by(Watershed) %>%
mutate(Average_Temp = mean(Temp),
Average_Forest = mean(Forest)) %>%
distinct(Watershed, Average_Temp, Average_Forest)
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
catchment_by_site <- watershed_data %>%
dplyr::select("Watershed", "Site", "Wetland", "Forest", "Grass", "Agricultural")
blackhawk_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Blackhawk")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
kickapoo_grass <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Grass") %>%
dplyr::filter(Watershed == "Kickapoo")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
kickapoo_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Kickapoo")
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ui<-fluidPage(
titlePanel(title = "Explore Consumer Complaints Dataset"),
h4('Complaints by Month per Product'),
#setting up data entry/selection areas for user
sidebarLayout(
sidebarPanel(
selectizeInput("watershed_choice", "Select Watershed(s)",
choices = c("Blackhawk", "Crow", "Kickapoo", "Rock Island", "Walnut"), multiple = TRUE, selected = "Blackhawk"),
selectInput("visualization_choice", "Select Visualization",
choices = c(1, 2, 3, 4, 5, 6, 7, 8)),
#used to display results for desired inputs
actionButton("Button", "Go")
),
mainPanel(
plotOutput("myPlot")
)
)
)
server <- function(input, output) {
# Render plot based on selected chart type
output$myPlot <- renderPlot({
if (input$visualization_choice == 1) {
# Render bar chart
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
} else if (input$visualization_choice == 2) {
# Render scatter plot
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, fill = Average_Tot_inv_abun)) +
geom_col(show.legend = TRUE) +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
} else if (input$visualization_choice == 3) {
# Render line chart
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
} else if (input$visualization_choice == 4) {
# Render line chart
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, fill = Average_DO_ppm)) +
geom_col(show.legend = TRUE) +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
} else if (input$visualization_choice == 5) {
# Render line chart
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 6) {
# Render line chart
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 7) {
# Render line chart
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
} else if (input$visualization_choice == 8) {
# Render line chart
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
}
})
observeEvent(input$watershed_choice, {
if (input$visualization_choice == 1) {
updatePlot <- ggplot(phosphate_catchment, aes(x = input$watershed_choice, Average_Imper_Catch, y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
}
output$myPlot <- renderPlot(updatePlot)
})
}
shinyApp(ui, server)
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
labs(title = "Phosphate's Impact on Catchment Levels in Impervious Surfaces", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, fill = Average_Tot_inv_abun)) +
geom_col(show.legend = TRUE) +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, size = Average_Tot_inv_abun)) +
geom_point(color = "orange", alpha=0.8) +
scale_size(range = c(.1, 20), name="Negativity Ratio") +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)", fill = "Abundance of macroinvertebrates")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, size = Average_Tot_inv_abun)) +
geom_point(color = "orange", alpha=0.8) +
scale_size(range = c(.5, 10), name = "Abundance of macroinvertebrates") +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, size = Average_Tot_inv_abun)) +
geom_point(color = "orange", alpha=0.8) +
scale_size(range = c(5, 10), name = "Abundance of macroinvertebrates") +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, size = Average_Tot_inv_abun)) +
geom_point(color = "orange", alpha=0.8) +
scale_size(range = c(5, 20), name = "Abundance of macroinvertebrates") +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)")
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low="cyan", high="black") +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low="white", high="darkblue") +
labs(title = "Phosphate's Impact on Impervious Surface Catchment Levels", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, color = Average_DO_ppm)) +
geom_point(show.legend = TRUE) +
scale_fill_gradient(low="#FFC300", high="black") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, color = Average_DO_ppm)) +
geom_point(show.legend = TRUE) +
scale_fill_continuous(color="#FFC300") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, color = Average_DO_ppm)) +
geom_point(show.legend = TRUE) +
scale_fill_manual(color="#FFC300") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, color = Average_DO_ppm)) +
geom_point(show.legend = TRUE) +
scale_fill_manual(value = "#FFC300") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, color = Average_DO_ppm)) +
geom_point(show.legend = TRUE) +
scale_fill_manual(values = "#FFC300") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index", fill = "Oxygen (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FFC330", alpha=0.8) +
scale_size(range = c(5, 20), name = "Macroinvertebrate Family Biotic Index") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FF5733", alpha=0.8) +
scale_size(range = c(5, 20), name = "Macroinvertebrate Family Biotic Index") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FF5733", alpha=1.0) +
scale_size(range = c(5, 20), name = "Macroinvertebrate Family Biotic Index") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(phosphate_catchment, aes(x = reorder(Watershed, Average_Imper_Catch), y = Average_Imper_Catch, fill = Average_PO4)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low="white", high="darkblue") +
labs(title = "Phosphate's Impact on Impervious Surface Catchment Levels", x = "Watershed", y = "Impervious Catchment", fill = "Phosphate (mg/L)")
ggplot(invertebrate_leaf_decomp, aes(x = reorder(Watershed, Average_Leaf_Dec), y = Average_Leaf_Dec, size = Average_Tot_inv_abun)) +
geom_point(color = "orange", alpha=0.8) +
scale_size(range = c(5, 20), name = "Abundance of macroinvertebrates") +
labs(title = "Macroinvertebrate Abundace Versus Leaf Decomposition Rate", x = "Watershed", y = "Leaf Decomposition Rate (g/day)")
ggplot(nitrate_catchment, aes(x = reorder(Watershed, Average_Agricultural), y = Average_Agricultural, fill = Average_NO3)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low="cyan", high="black") +
labs(title = "Nitrate Versus Catchment in Agricultural Areas", x = "Watershed", y = "Agricultural Catchment", fill = "Nitrate/Nitrite (mg/L)")
ggplot(oxygen_fbi, aes(x = reorder(-Watershed, Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FF5733", alpha=1.0) +
scale_size(range = c(5, 20), name = "Macroinvertebrate Family Biotic Index") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, -Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FF5733", alpha=1.0) +
scale_size(range = c(5, 20), name = "Macroinvertebrate Family Biotic Index") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(oxygen_fbi, aes(x = reorder(Watershed, -Average_FBI), y = Average_FBI, size = Average_DO_ppm)) +
geom_point(color = "#FF5733", alpha=1.0) +
scale_size(range = c(5, 20), name = "Average_DO_ppm") +
labs(title = "The Effect of Oxygen on Insects' Tolerance to Pollution", x = "Watershed", y = "Macroinvertebrate Family Biotic Index")
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 2/12"),
high = munsell::mnsl("5P 7/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 2/12"),
high = munsell::mnsl("5P 9/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 2/12"),
high = munsell::mnsl("5P 7/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 7/12"), high = munsell::mnsl("5P 2/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, -Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 7/12"), high = munsell::mnsl("5P 2/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, -Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 7/12"), high = "black") +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(forest_temp, aes(x = reorder(Watershed, -Average_Forest), y = Average_Forest, fill = Average_Temp)) +
geom_col(show.legend = TRUE) +
scale_fill_gradient(low = munsell::mnsl("5P 7/12"), high = munsell::mnsl("5P 2/12")) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
blackhawk_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Blackhawk")
catchment_by_site <- watershed_data %>%
dplyr::select("Watershed", "Site", "Wetland", "Forest", "Grass", "Agricultural")
blackhawk_agricultural <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Agricultural") %>%
dplyr::filter(Watershed == "Blackhawk")
kickapoo_grass <- catchment_by_site %>%
dplyr::select("Watershed", "Site", "Grass") %>%
dplyr::filter(Watershed == "Kickapoo")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = as.Factor(Agricultural))) +
geom_col(show.legend = FALSE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = as.factor(Agricultural))) +
geom_col(show.legend = FALSE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(blackhawk_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = as.factor(Agricultural))) +
geom_col(show.legend = FALSE) +
labs(title = "Agricultural Levels by Blackhawk Watershed Sites", x = "Sites", y = "Agricultural Catchment")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = Watershed)) +
geom_col(show.legend = FALSE) +
scale_fill_manual(values = c("#3498DB", "#E74CEC", "#009E73")) +
labs(title = "Grass Catchment Levels by Kickapoo Watershed Sites", x = "Sites", y = "Grass Catchment")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass)) +
geom_col(show.legend = FALSE) +
scale_fill_manual(values = c("#3498DB", "#E74CEC", "#009E73")) +
labs(title = "Grass Catchment Levels by Kickapoo Watershed Sites", x = "Sites", y = "Grass Catchment")
ggplot(kickapoo_grass, aes(x = reorder(Site, -Grass), y = Grass, fill = as.factor(Grass))) +
geom_col(show.legend = FALSE) +
scale_fill_manual(values = c("#3498DB", "#E74CEC", "#009E73")) +
labs(title = "Grass Catchment Levels by Kickapoo Watershed Sites", x = "Sites", y = "Grass Catchment")
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = Watershed)) +
geom_col(show.legend = TRUE) +
labs(title = "Temperature Versus Catchment in Forest Areas", x = "Watershed", y = "Forest Catchment", fill = "Temperature (degrees C)")
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = as.factor(Agricultural))) +
geom_col(show.legend = TRUE) +
scale_fill_manual(values = c("#FF2D2D", "#1F4E79", "#4C2C69")) +
labs(title = "Agricultural Catchment Levels by Kickapoo Watershed Sites", x = "Sites", y = "Agricultural Catchment")
ggplot(kickapoo_agricultural, aes(x = reorder(Site, Agricultural), y = Agricultural, fill = as.factor(Agricultural))) +
geom_col(show.legend = FALSE) +
scale_fill_manual(values = c("#FF2D2D", "#1F4E79", "#4C2C69")) +
labs(title = "Agricultural Catchment Levels by Kickapoo Watershed Sites", x = "Sites", y = "Agricultural Catchment")
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/mississippi_valley.R')
runApp('~/data332/mississippi_valley_project/rscript/mississippi_valley.R')
